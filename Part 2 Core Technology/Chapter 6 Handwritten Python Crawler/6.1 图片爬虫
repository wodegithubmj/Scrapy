6.1 图片爬虫
    需求：把京东商城手机类商品的图片全部下载到本地，通过手工复制粘贴是一项庞大的工程，通过Pytho网络爬虫就很方便。
    步骤：
         1）打开京东商城首页选择“手机”子分类。
         2）分析网页特点，提取到关键信息，分析到page字段表示的是决定页数的关键词。故可通过for循环获取所有的商品页面。
         3）过滤无关信息。分析网页源码可以发现每个商品都有“<div id="plist">”代码，这个标识符距离第一个想爬取的图片较近，并且在页面中唯一，故可以作为
            过滤的起点。同样可以分析到“div class="page clearfix"”可以作为结束的标志。
            如果要进行第一次过滤，正则表达式可构造为：pat1='<div id="plist".+?<div class="page clearfix">'
         4) 分析对应图片的源代码，构造出提取图片链接的正则表达式：
            pat2='<img width="220" height="220" data-img="1" data-lazy-img="//(.+?\.jpg)">'
            
     图片爬虫的一般思路：
     1）建立爬取图片的自定义函数，爬取过程为：首先通过urllib.request.urlopen(url).read()读取网页源码，然后根据第一个正则进行第一次过滤，接着进行第二次
     过滤，提取目标图片的链接，并将链接地址存储到列表中，随后遍历该列表，分别将对应链接通过urllib.request.urlretrieve(imageurl,filename=imagename)
     存储到本地。当出现异常可以通过x+=1自动跳到下一个图片。
     
     2）通过for驯悍将该分类吓得所有网页爬取一边，链接可构造为url="http://list.jd.com/list.html?cat=9987,653,655&page="+str(i)。每次循环调用上面的函数
     实现该图片的爬取。
     
     源代码如下：
